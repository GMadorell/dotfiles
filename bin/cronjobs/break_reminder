#!/bin/bash
MINUTES_AFTER_WHICH_TO_REMIND=30
echo "`date`: RUNNING: break reminder"

now=$(gdate +%s)
last_login=$(log show --style syslog --predicate 'process == "loginwindow"' --last 1000m | grep "SecKeychainLogin returned success" | tail -n 1 | cut -d' ' -f1,2 | xargs -I {} gdate +%s -d "{}")
last_sleep=$(log show --style syslog --predicate 'process == "loginwindow"' --last 1000m | grep "LUIAuthenticationServiceProvider deactivateWithContext:]_block_invoke" | tail -n 1 | cut -d' ' -f1,2 | xargs -I {} gdate +%s -d "{}")
goal=$(echo "$last_sleep + $MINUTES_AFTER_WHICH_TO_REMIND * 60" | bc)

last_login=$(echo "$last_login + 1" | bc) # Fix off by one error that happens rarely.
echo "Last login at $last_login"
echo "Last sleep at $last_sleep"

if [ $last_sleep -gt $last_login ]; then
  echo "Skipping further processing because last sleep happened after last login"
elif [ $now -ge $goal ]; then
  echo "Break time!"
  seconds_without_break=$(echo "($now - $last_login)" | bc)
  display_message=$(echo "$(gdate -ud @$seconds_without_break +%H:%M) session duration.\nSession: $(gdate -d @$last_login +%H:%M)-$(gdate -d @$now +%H:%M)").
  echo $display_message
  osascript -e "display notification \"$display_message\" with title \"Break time!\" sound name \"Glass\""
  sleep 0.8;
  say "[[volm 0.4]] Break time"
else
  time_until_break=$(echo "$goal - $now" | bc)
  echo "NOT break time. Next break at: $(gdate -d @$goal +%H:%M), in $(gdate -ud @$time_until_break +%H:%M)."
fi;

echo "`date`: FINISHED: break reminder"



